// Node.js
export default function Node(name, attributes = {}) {
  this.name = name;
  this.attributes = attributes;
}

Node.prototype.getAttributesAsLine = function getAttributesAsLine() {
  const attrs = Object.entries(this.attributes).map(([key, value]) => `${key}="${value}"`);
  return attrs.length > 0 ? ` ${attrs.join(' ')}` : '';
}

// SingleTag.js
import Node from './Node';

function SingleTag(name, attributes = {}) {
  Node.apply(this, [name, attributes]);
}

SingleTag.prototype = Object.create(Node.prototype);
SingleTag.prototype.toString = function str() {
  return `<${this.name}${this.getAttributesAsLine()}>`;
};

export default SingleTag;

// PairedTag.js
import Node from './Node';

export default function PairedTag(name, attributes, body = '', children = []) {
  Node.apply(this, [name, attributes]);
  this.body = body;
  this.children = children;
}

PairedTag.prototype = Object.create(Node.prototype);

PairedTag.prototype.toString = function toString() {
  const value = this.children.length > 0 ? this.children.map(child => child.toString()).join('') : this.body;
  return `<${this.name}${this.getAttributesAsLine()}>${value}</${this.name}>`;
};
